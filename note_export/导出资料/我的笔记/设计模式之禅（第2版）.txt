## 第6章 开闭原则
> 23个设计模式都是从各个不同的角度对变化进行封装的


## 第8章 工厂方法模式
> 良好的封装性，代码结构清晰。

> 工厂方法模式是new一个对象的替代品


## 第11章 建造者模式
> 好，需求还是比较复杂，我们先一个一个地解决，先从找一个最简单的切入点

> 加上this关键字，我就是要调用本类中的成员变量或方法，而不是本方法中的一个变量。

> 注意 上面每个方法都有一个this.sequence.clear()，估计你一看就明白。

> 我们写程序重构的最终目的就是：简单、清晰。


## 第21章 组合模式
> 提炼事物的共同点，然后封装之

> 程序写得好不好，就看别人怎么调用了

> 用for循环加上递归就可以完成这个读取。

> 为什么要加个Deprecated注解呢？就是在编译器期告诉调用者，你可以调我这个方法，但是可能出现错误哦，我已经告诉你“该方法已经失效”了，你还使用那在运行期也会抛出


## 第24章 备忘录模式
> 数据库连接的事务管理就是用的备忘录模式，想想看，如果你要实现一个JDBC驱动，你怎么来实现事务？还不是用备忘录模式嘛！


## 第33章 跨战区PK
> 它的主旨是建立一个不破坏封装性的可扩展架构。


## 第35章 工厂方法模式+策略模式
> 做设计要遵循这样一个原则：先选最简单的业务，然后画出类图。


## 第37章 MVC框架
> 读源码是提高设计技能和开发技能的一个重要途径，看一本书是与作者进行了一次心灵交互，看一份源码是与一群作者进行心灵交互


